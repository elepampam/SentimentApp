'use strict';

var _arrayIncludes = require('array-includes');

var _arrayIncludes2 = _interopRequireDefault(_arrayIncludes);

var _camelcase = require('camelcase');

var _camelcase2 = _interopRequireDefault(_camelcase);

var _stemmer_utility = require('./stemmer_utility.js');

var _stemmer_utility2 = _interopRequireDefault(_stemmer_utility);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var VOWEL = ['a', 'e', 'i', 'o', 'u'];
var PARTICLE_CHARACTERS = ['kah', 'lah', 'pun'];
var POSSESIVE_PRONOUN_CHARACTERS = ['ku', 'mu', 'nya'];
var FIRST_ORDER_PREFIX_CHARACTERS = ['meng', 'meny', 'men', 'mem', 'me', 'peng', 'peny', 'pen', 'pem', 'di', 'ter', 'ke'];
var SPECIAL_FIRST_ORDER_PREFIX_CHARACTERS = ['meny', 'peny', 'pen', 'men', 'mem', 'pem'];
var SECOND_ORDER_PREFIX_CHARACTERS = ['ber', 'be', 'per', 'pe'];
var SPECIAL_SECOND_ORDER_PREFIX_CHARACTERS = ['be'];
var NON_SPECIAL_SECOND_ORDER_PREFIX_CHARACTERS = ['ber', 'per', 'pe'];
var SPECIAL_SECOND_ORDER_PREFIX_WORDS = ['belajar', 'pelajar', 'belunjur'];
var SUFFIX_CHARACTERS = ['kan', 'an', 'i'];
var AMBIGUOUS_WORDS = ['nyanyi', 'nyala', 'nyata', 'nasehat', 'makan', 'minum', 'nikah'];

function totalSyllables(word) {
	var result = 0;

	for (var i = 0; i < word.length; i++) {
		if (isVowel(word[i])) result++;
	}

	return result;
}

function removeFirstOrderPrefix(word) {
	var numberOfSyllables = totalSyllables(word);
	var wordLength = word.length;

	SPECIAL_FIRST_ORDER_PREFIX_CHARACTERS.forEach(function (char) {
		var charLength = char.length;
		if (_stemmer_utility2.default.isStartsWith(word, wordLength, char) && wordLength > charLength && isVowel(word[charLength])) {
			numberOfSyllables -= 1;
			word = substituteChar(AMBIGUOUS_WORDS, char, word);
		}
	});

	if (word === 'memakan' || word === 'meminum') {
		word = sliceWordWithPosition(word, 2, 'start');
	}

	word = removeMatchingCollection(word, FIRST_ORDER_PREFIX_CHARACTERS, 'start');

	return word;
}

function removeSecondOrderPrefix(word) {
	var numberOfSyllables = totalSyllables(word);
	var wordLength = word.length;

	if ((0, _arrayIncludes2.default)(SPECIAL_SECOND_ORDER_PREFIX_WORDS, word)) {
		numberOfSyllables -= 1;
		return sliceWordWithPosition(word, 3, 'start');
	} else if (_stemmer_utility2.default.isStartsWith(word, wordLength, 'be') && wordLength > 4 && !isVowel(word[2]) && word.substring(3, 5) === 'er') {
		numberOfSyllables -= 1;
		return sliceWordWithPosition(word, 2, 'start');
	} else {
		return removeMatchingCollection(word, NON_SPECIAL_SECOND_ORDER_PREFIX_CHARACTERS, 'start');
	}
}

function removeSuffix(word) {
	return removeMatchingCollection(word, SUFFIX_CHARACTERS, 'end');
}

function removeParticle(word) {
	return removeMatchingCollection(word, PARTICLE_CHARACTERS, 'end');
}

function removePossesive(word) {
	return removeMatchingCollection(word, POSSESIVE_PRONOUN_CHARACTERS, 'end');
}

function removeMatchingCollection(word, type, position) {
	var numberOfSyllables = totalSyllables(word);
	var Position = (0, _camelcase2.default)('is ' + position + 's with');

	type.forEach(function (char) {
		if (_stemmer_utility2.default[Position](word, word.length, char)) {
			numberOfSyllables -= 1;

			if (position === 'end') {
				word = word.slice(0, char.length * -1);
			} else {
				word = word.slice(char.length);
			}
		}
	});

	return word;
}

function isVowel(character) {
	return (0, _arrayIncludes2.default)(VOWEL, character);
}

function sliceWordWithPosition(word, charLength, position) {
	if (position === 'end') {
		word = word.slice(0, charLength * -1);
	} else {
		word = word.slice(charLength);
	}

	return word;
}

function substituteChar(AMBIGUOUS_WORD, char, word) {
	var charLength = char.length;
	var substituteChar = void 0;

	switch (typeof word !== 'undefined') {
		case (0, _arrayIncludes2.default)(['meny', 'peny'], char) && !(0, _arrayIncludes2.default)(AMBIGUOUS_WORDS, word.substring(2)):
			substituteChar = 's';
			break;
		case (0, _arrayIncludes2.default)(['men', 'pen'], char):
			if ((0, _arrayIncludes2.default)(AMBIGUOUS_WORDS, word.substring(2)) || (0, _arrayIncludes2.default)(['kah', 'lah', 'ku', 'mu', 'nya', 'kan', 'an', 'i'], word.substring(word.length - 1))) {
				substituteChar = 'n';
			} else {
				substituteChar = 't';
			}
			break;
		case char === 'mem' && !(0, _arrayIncludes2.default)(AMBIGUOUS_WORDS, word.substring(2)):
			substituteChar = 'p';
			break;
		case char === 'pem':
			substituteChar = 'p';
			break;
		case word.substring(2) === 'nyanyi' || word.substring(2) === 'nyala' || word.substring(2) === 'nyata':
			substituteChar = 'ny';
			break;
	}
	if (substituteChar) word = substituteChar + word.slice(charLength);

	return word;
}

module.exports = {
	totalSyllables: totalSyllables,
	removeParticle: removeParticle,
	removePossesive: removePossesive,
	removeFirstOrderPrefix: removeFirstOrderPrefix,
	removeSecondOrderPrefix: removeSecondOrderPrefix,
	removeSuffix: removeSuffix
};